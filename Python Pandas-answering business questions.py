# -*- coding: utf-8 -*-
"""levy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WDo26vw9ziRvn6SAlR2rngM4Xsf797yG

I converted the data from W3school into csv files which I imported into python for the exercise.I used Google Colaboratory for the exercise. This csv files have been zipped and attached to the email
"""

import pandas as pd

customer = pd.read_csv("customers.csv")

categories = pd.read_csv("categories.csv")

employees = pd.read_csv("employees.csv")

order_detail = pd.read_csv("orderdetails.csv")

orders = pd.read_csv("orders.csv")

product = pd.read_csv("products.csv")

shippers = pd.read_csv("shippers.csv")

suppliers = pd.read_csv("suppliers.csv")

#1) What is the most expensive product
exp_product = product.set_index('ProductName')['Price'].idxmax()
exp_product

#2) what is the average product price?
avg_product = product['Price'].mean()
avg_product

#3) List of customers whose name start on B
search = 'B'
customer_name = customer["CustomerName"].str.startswith(search, na = False)
customer[customer_name]

#4) Number of products by category and supplier sorted by the number of products
products_by_cat_sup = product.merge(categories, left_on="CategoryID", right_on="CategoryID").merge(suppliers, left_on="SupplierID", right_on="SupplierID")
# products_by_cat_sup = products_by_cat_sup[['ProductID', 'CategoryID', 'SupplierID', 'ProductName', 'CategoryName', 'SupplierName', 'Unit', 'Price']]
products_by_cat_sup = products_by_cat_sup.groupby(['CategoryName', 'SupplierName']).size().to_frame('NumberOfProducts').sort_values('NumberOfProducts', ascending=False)
products_by_cat_sup

#5) List all customers who made more than one order
orders_by_customers = orders.merge(customer, left_on="CustomerID", right_on="CustomerID")
orders_by_customers = orders_by_customers.groupby('CustomerName').size().to_frame('NumberOfOrders').sort_values(['NumberOfOrders'], ascending=[False])
orders_by_customers[orders_by_customers['NumberOfOrders'] > 1]

#6) List customers who did not order anything
customers_order = pd.merge(customer,orders, left_on='CustomerID',right_on='CustomerID', how='left')
no_order = customers_order.CustomerName[customers_order.OrderID.isna()]
no_order.reset_index(drop=True, inplace=True)
no_order